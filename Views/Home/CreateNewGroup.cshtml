@{
    ViewData["Title"] = "CreateNewGroup";
}

<!--<div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="6000">
    <ol class="carousel-indicators">
        <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
        <li data-target="#myCarousel" data-slide-to="1"></li>
        <li data-target="#myCarousel" data-slide-to="2"></li>
        <li data-target="#myCarousel" data-slide-to="3"></li>
    </ol>
    <div class="carousel-inner" role="listbox">
        <div class="item active">
            <img src="~/images/banner1.svg" alt="ASP.NET" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    Learn how to build ASP.NET apps that can run anywhere.
                    <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkID=525028&clcid=0x409">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
        <div class="item">
            <img src="~/images/banner2.svg" alt="Visual Studio" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    There are powerful new features in Visual Studio for building modern web apps.
                    <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkID=525030&clcid=0x409">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
        <div class="item">
            <img src="~/images/banner3.svg" alt="Package Management" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    Bring in libraries from NuGet, Bower, and npm, and automate tasks using Grunt or Gulp.
                    <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkID=525029&clcid=0x409">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
        <div class="item">
            <img src="~/images/banner4.svg" alt="Microsoft Azure" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    Learn how Microsoft's Azure cloud platform allows you to build, deploy, and scale web apps.
                    <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkID=525027&clcid=0x409">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
    </div>
    <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>

<div class="row">
    <div class="col-md-3">
        <h2>Things Nick loves</h2>
        <ul>
            <li>Hummus n crackers</li>
            <li>vidya games</li>
            <li>ryan workin on him</li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=518007">Gulp</a> and <a href="https://go.microsoft.com/fwlink/?LinkId=518004">Bower</a> for managing client-side libraries</li>
            <li>Theming using <a href="https://go.microsoft.com/fwlink/?LinkID=398939">Bootstrap</a></li>
        </ul>
    </div>
    <div class="col-md-3">
        <h2>How to</h2>
        <ul>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=398600">Add a Controller and View</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=699562">Add an appsetting in config and access it in app.</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=699315">Manage User Secrets using Secret Manager.</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=699316">Use logging to log a message.</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=699317">Add packages using NuGet.</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=699318">Add client packages using Bower.</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=699319">Target development, staging or production environment.</a></li>
        </ul>
    </div>
    <div class="col-md-3">
        <h2>Overview</h2>
        <ul>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=518008">Conceptual overview of what is ASP.NET Core</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=699320">Fundamentals of ASP.NET Core such as Startup and middleware.</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=398602">Working with Data</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkId=398603">Security</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=699321">Client side development</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=699322">Develop on different platforms</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=699323">Read more on the documentation site</a></li>
        </ul>
    </div>
    <div class="col-md-3">
        <h2>Run & Deploy</h2>
        <ul>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=517851">Run your app</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=517853">Run tools such as EF migrations and more</a></li>
            <li><a href="https://go.microsoft.com/fwlink/?LinkID=398609">Publish to Microsoft Azure Web Apps</a></li>
        </ul>
    </div>
</div> -->

<style>
 body {
    background-color: #eee;
}

*[role="form"] {
    max-width: 530px;
    padding: 15px;
    margin: 0 auto;
    background-color: #fff;
    border-radius: 0.3em;
}

*[role="form"] h2 {
    margin-left: 5em;
    margin-bottom: 1em;
}
  </style>

 <div class="container">
            <form class="form-horizontal" role="form">
                <h2>Create New Group</h2>
                <div class="form-group">
                    <label for="firstName" class="col-sm-3 control-label">Group Name</label>
                    <div class="col-sm-9">
                        <input type="text" id="groupName" class="form-control" autofocus>
                    </div>
                </div>
</div>

                
                <div class="form-group">
                    <div class="col-sm-12 " style="text-align:center">
                        <button type="button" onclick="makeGroup()" class="btn btn-primary">Create Group</button>
                    </div>
                </div>
            </form> <!-- /form -->
        </div> <!-- ./container -->

<body onload="getCookie('username')">
<p id="userSignedIn"></p>

<h1 id="bigOne"></h1>

        <script src="https://www.gstatic.com/firebasejs/3.4.1/firebase.js"></script>
        <script>
            // Initialize Firebase
            var config = {
                apiKey: "AIzaSyCOfxbo4JVNrgeC3OD6M_hGMsb1-JH7oZo",
                authDomain: "pitch-8ef64.firebaseapp.com",
                databaseURL: "https://pitch-8ef64.firebaseio.com",
                storageBucket: "",
                messagingSenderId: "953525203925"
            };
            firebase.initializeApp(config);

            var bigOne = document.getElementById('bigOne');
            var dbRef = firebase.database().ref().child('text');
            dbRef.on('value', snap => bigOne.innerText = snap.val());

            function getCookie(cname) {
                var name = cname + "=";
                var ca = document.cookie.split(';');
                for(var i=0; i<ca.length; i++) {
                    var c = ca[i];
                    while (c.charAt(0)==' ') {
                        c = c.substring(1);
                    }
                    if (c.indexOf(name) == 0) {
                        document.getElementById("userSignedIn").innerHTML = c.substring(name.length, c.indexOf(":"));
                        if (c.substring(name.length, c.indexOf(":")).length != 0)
                            return c.substring(name.length, c.indexOf(":"));
                    }
                }
                document.getElementById("userSignedIn").innerHTML = "Log In";
                return "";
            }


            function makeGroup() {
        var groupName = document.getElementById("groupName").value;
        var userId = document.URL;
        userId = userId.substring((userId.indexOf('CreateNewGroup/') + 15), (userId.indexOf('?')));

            if(groupName.length < 0) {
                alert("Didn't type in a Group Name!");
            } else {
                var ref = firebase.database().ref().child("Groups");
                ref.orderByValue().on("value", function(snapshot) {
                    var userExist = false;
                    var groupId = 0;
                    snapshot.forEach(function(data) {
                        groupId = data.val().groupId;
                        if(data.val().groupname == groupName) {
                            userExist = true;
                        }
                    });
                    groupId++;
                    if(userExist == false) {
                        var sendId = userId;
                            var groupsref = firebase.database().ref().child("Groups");
                            var newGroupsref = groupsref.push();
                            newGroupsref.set({
                                groupname: groupName,
                                groupId: groupId
                            });
                            var groupsRelationshipsref = firebase.database().ref().child("GroupRelationships");
                            var newGroupsRelationshipsref = groupsRelationshipsref.push();
                            newGroupsRelationshipsref.set({
                                groupId: groupId,
                                sendId: sendId,
                                recvId: sendId,
                                status: 1
                            });
                            //location.reload();
                    } else {
                        //alert("Group already exists");
                    }
                });
            }
    }

      function getCreatedBy(groupRelationships) {
            var groupID = document.URL;
            var username;
            groupID = groupID.substring((groupID.indexOf('Playlist/') + 9), (groupID.indexOf('?')));
              for(let key in groupRelationships){
                    if(groupRelationships.hasOwnProperty(key)){ 
                        if(groupRelationships[key].groupId == groupID && groupRelationships[key].sendId ==  groupRelationships[key].recvId) {
                          var ref = firebase.database().ref().child("Users");
                          ref.orderByValue().on("value", function(snapshot) {
                               snapshot.forEach(function(data) {
                                  if(data.val().userId == groupRelationships[key].sendId) {
                                    createdBy.innerHTML = "Created By: " + data.val().username;
                                    username = data.val().username;
                                  }

                               });
                               return username;
                          });
                        }
                    }
              }
            }

        </script>